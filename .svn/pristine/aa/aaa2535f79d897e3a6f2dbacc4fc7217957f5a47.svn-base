<template>
		<div class="quotat">
				<div class="quotat_cpt" v-model="curIndex">
						<div v-show="curIndex == 0">今日涨幅榜</div>
						<div v-show="curIndex == 1">今日买手榜</div>
						<div v-show="curIndex == 2">今日收益榜</div>
						<router-link to="/paihangb" tag="div">全部></router-link>
				</div>
				<div class="quotat_banner">
						<swiper :options="swiperOption" ref="Myswiper" class="quotat_swiper">
								<swiper-slide class="quotat_banner_slide">
										<div v-for="item in arr[0].arra" class="quotat_slide_item">
												<div><span>{{item.nam}}</span><span>{{item.num}}</span></div>
												<div>{{item.fen}}</div>
										</div>
								</swiper-slide>
								<swiper-slide class="quotat_banner_slide">
										<div v-for="item in arr[1].arra" class="quotat_slide_item">
												<div><span>{{item.nam}}</span><span>{{item.num}}</span></div>
												<div>{{item.fen}}</div>
										</div>
								</swiper-slide>
								<swiper-slide class="quotat_banner_slide">
										<div v-for="item in arr[2].arra" class="quotat_slide_item">
												<div><span>{{item.nam}}</span><span>{{item.num}}</span></div>
												<div>{{item.fen}}</div>
										</div>
								</swiper-slide>
								<div class="swiper-pagination" slot="pagination"></div>
						</swiper>
						<div class="jc"></div>
				</div>
				<!--  -->
				<homes></homes>
				<!--   -->
				<div class="list_data">
						<div class="quotat_tab">
								<div class="tab-item" v-for="(item,index) in tabList" v-model="debtLibraryTabIndex"
										 v-bind:class="{active:(currentIndex == index)}" @click="onItemClick(index)">
										<span class="tab-link">{{item}}</span>
								</div>
						</div>
						<!--自选-->
						<div id="mescroll0" class="mescroll" v-show="currentIndex==0">
								<div id="dataList0">
										<tablist :datalist="newsList0"></tablist>
								</div>
						</div>
						<!--全部-->
						<div id="mescroll1" class="mescroll" v-show="currentIndex==1">
								<div id="dataList1">
										<tablist :datalist="newsList1"></tablist>
										<tablist :datalist="newsList1" :flag="true"></tablist>
								</div>
						</div>
						<!--艺人-->
						<div id="mescroll2" class="mescroll" v-show="currentIndex==2">
								<div id="dataList2">
										<tablist :datalist="newsList2"></tablist>
										<tablist :datalist="newsList2" flag="true"></tablist>
								</div>
						</div>
						<!--模特-->
						<div id="mescroll3" class="mescroll" v-show="currentIndex==3">
								<div id="dataList3">
										<tablist :datalist="newsList3"></tablist>
										<tablist :datalist="newsList3" flag="true"></tablist>
								</div>
						</div>
						<!--体育-->
						<div id="mescroll4" class="mescroll" v-show="currentIndex==4">
								<div id="dataList4">
										<tablist :datalist="newsList4"></tablist>
										<tablist :datalist="newsList4" flag="true"></tablist>
								</div>
						</div>
				</div>
		</div>
</template>

<script>
		import homes from '../public/homeS'
		import MeScroll from 'mescroll.js'
		import img from './../../assets/img/home/home1.png'
		import tablist from './../public/tabList'
		export default {
				name: "quotat",
				data() {
						return {
								curIndex: 0,
								arr: [{
										arra: [
												{
														nam: "金钟国",
														num: "000001",
														fen: "+10.26%"
												},
												{
														nam: "金钟国",
														num: "000001",
														fen: "+10.26%"
												},
												{
														nam: "金钟国",
														num: "000001",
														fen: "+10.26%"
												}
										]
								}, {
										arra: [
												{
														nam: "金钟国",
														num: "000001",
														fen: "+10.26%"
												},
												{
														nam: "金钟国",
														num: "000001",
														fen: "+10.26%"
												},
												{
														nam: "金钟国",
														num: "000001",
														fen: "+10.26%"
												}
										]
								}, {
										arra: [
												{
														nam: "金钟国",
														num: "000001",
														fen: "+10.26%"
												},
												{
														nam: "金钟国",
														num: "000001",
														fen: "+10.26%"
												},
												{
														nam: "金钟国",
														num: "000001",
														fen: "+10.26%"
												}
										]
								}],
								tabList: ['自选', '全部', '艺人', '模特', '体育'],
								debtLibraryTabIndex: 0,
								currentIndex: 0,
								mescrollArr: new Array(5),
								newsList0: [],
								newsList1: [],
								newsList2: [],
								newsList3: [],
								newsList4: [],
								mescroll: '',
								swiperOption: {
										pagination: '.swiper-pagination',
										paginationClickable: true,
										autoplayDisableOnInteraction: false,
										loop: false,
										onTransitionStart:swiper => {
												let curIndex = swiper.realIndex;
												console.log(curIndex);
												this.curIndex = curIndex;
										},
										coverflow: {
												rotate: 30,
												stretch: 10,
												depth: 60,
												modifier: 2,
												slideShadows: true
										}
								},
						}
				},
				computed:{
						// swiper(){
						// 		return this.$refs.Myswiper.swiper
						// }
				},
				mounted: function () {
						//初始化首页
						this.mescrollArr[0] = this.initMescroll("mescroll0", "dataList0");
				},
				methods: {
						onItemClick(index) {
								if (this.currentIndex != index) {
										this.currentIndex = index;
										if (this.mescrollArr[index] == null) {
												this.mescrollArr[index] = this.initMescroll("mescroll" + index, "dataList" + index);
										}
								}
						},
						initMescroll(mescrollId, clearEmptyId) {
								//创建MeScroll对象,内部已默认开启下拉刷新,自动执行up.callback,刷新列表数据;
								let mescroll = new MeScroll(mescrollId, {
										//上拉加载的配置项
										up: {
												callback: this.getListData, //上拉回调,此处可简写; 相当于 callback: function (page) { getListData(page); }
												isBounce: false, //是否允许ios的bounce回弹;默认true,允许回弹; 此处配置为false,可解决微信,QQ,Safari等等iOS浏览器列表顶部下拉和底部上拉露出浏览器灰色背景和卡顿2秒的问题
												page: {
														num: 0, //当前页 默认0,回调之前会加1; 即callback(page)会从1开始
														size: 10, //每页数据条数
														time: null //加载第一页数据服务器返回的时间; 防止用户翻页时,后台新增了数据从而导致下一页数据重复;
												},
												noMoreSize: 4, //如果列表已无数据,可设置列表的总数量要大于半页才显示无更多数据;避免列表数据过少(比如只有一条数据),显示无更多数据会不好看; 默认5
												empty: {
														warpId: clearEmptyId,
														icon: "", //图标,默认null
														tip: "暂无数据...", //提示
														// btntext: "去逛逛 >", //按钮,默认""
														// btnClick: function () {//点击按钮的回调,默认null
														// 	alert("点击了按钮,具体逻辑自行实现");
														// }
												},
												// clearEmptyId: clearEmptyId, //相当于同时设置了clearId和empty.warpId; 简化写法;默认null
												// toTop: { //配置回到顶部按钮
												// 	src: ToTopImg, //默认滚动到1000px显示,可配置offset修改
												// },
												htmlNodata: '<p class="upwarp-nodata">-- 没有更多数据 --</p>', //无数据的布局
										},
										down: {
												isLock: false
										},
								});
								return mescroll;
						},
						getListData(page) {
								//联网加载数据
								var self = this;
								var dataIndex = this.currentIndex; //记录当前联网的nav下标,防止快速切换时,联网回来curNavIndex已经改变的情况;
								this.getListDataFromNet(dataIndex, page.num, page.size, function (pageData) {
										self.mescrollArr[dataIndex].endSuccess(pageData.length);
										self.setListData(pageData, dataIndex, page);
								}, function () {
										//联网失败的回调,隐藏下拉刷新和上拉加载的状态;
										self.mescrollArr[dataIndex].endErr();
								});
						},
						/*设置列表数据
             * pageData 当前页的数据
             * dataIndex 数据属于哪个nav */
						setListData(pageData, dataIndex, page) {
								//更新列表数据
								switch (dataIndex) {
										case 0:
												if (page.num == 1) this.newsList0 = [];
												this.newsList0 = this.newsList0.concat(pageData);
												break;
										case 1:
												if (page.num == 1) this.newsList1 = [];
												this.newsList1 = this.newsList1.concat(pageData);
												break;
										case 2:
												if (page.num == 1) this.newsList2 = [];
												this.newsList2 = this.newsList2.concat(pageData);
												break;
										case 3:
												if (page.num == 1) this.newsList3 = [];
												this.newsList3 = this.newsList3.concat(pageData);
												break;
										case 4:
												if (page.num == 1) this.newsList4 = [];
												this.newsList4 = this.newsList4.concat(pageData);
												break;
								}
						},
						/*联网加载列表数据*/
						getListDataFromNet(curNavIndex, pageNum, pageSize, successCallback, errorCallback) {
								// debugger;
								//延时一秒,模拟联网
								let that = this;
								// setTimeout(() => {
								var listData = [
										{
												img: img,
												nam: "金钟国",
												money: 10000,
												numb: 5.67,
												updown: 12.65,
												is_close: 0
										},
										{
												img: img,
												nam: "金钟国",
												money: 10000,
												numb: 5.67,
												updown: 12.65,
												is_close: 0
										},
										{
												img: img,
												nam: "金钟国",
												money: 10000,
												numb: 5.67,
												updown: 12.65,
												is_close: 0
										},
										{
												img: img,
												nam: "金钟国",
												money: 10000,
												numb: 5.67,
												updown: 12.65,
												is_close: 0
										}
								]

								/* that.$axios.get("").then((data) => {
           let res = data.data
           if (res.code === 200) {
             listData = res.data*/
								successCallback && successCallback(listData);
								/*} else {

        }
      }, () => {
        errorCallback
      }).catch(err => {
        errorCallback()
      })
    }, 500)*/
						},
						//按价格排序
						setMoneyList() {

						},
						//按时间排序
						setTimeList() {

						}
				},
				components: {
						homes,
						tablist,
				}
		}
</script>

<style scoped lang="scss">
		$color: #ff5558;
		.quotat {
				height:100%;
				display: flex;
				flex-direction: column;
				.list_data{
						height:1rem;
						flex-grow:1;
						padding-bottom:.5rem;
				}
				.quotat_cpt {
						height: .3rem;
						font-size: .12rem;
						display: flex;
						justify-content: space-between;
						align-items: center;
						padding: 1.3%;
						div {
								color: #999;
						}
				}
				.quotat_banner {
						width: 100%;
						height: .9rem;
						border-bottom: 4px solid #eee;
						.swiper-pagination-bullets {
								bottom: 0;
						}
						.quotat_swiper {
								height: 100%;
						}
						.quotat_banner_slide {
								height: .8rem;
								display: flex;
								justify-content: space-around;
								align-items: flex-start;
								.quotat_slide_item {
										height: .6rem;
										width: 1.1rem;
										margin-top: .05rem;
										line-height: .3rem;
										text-align: center;
										box-shadow: 0 0 15px 0 #efefef;
										div:nth-of-type(1) {
												span {
														font-size: .1rem;
												}
										}
										div:nth-of-type(2) {
												font-size: .18rem;
												font-weight: bold;
										}
								}
						}
				}
				.quotat_tab {
						width: 100%;
						height: .4rem;
						line-height: .4rem;
						display: flex;
						border-bottom: 1px solid #ddd;
						.tab-item {
								width: .4rem;
								text-align: center;
								font-size: .14rem;
								margin-right: .2rem;
								.tab-link {
										display: inline-block;
										height: .3rem;
										line-height: .3rem;
								}
						}
				}
				.quotat_tab .tab-item.active {
						color: $color;
						background-color: #ffffff;
						.tab-link {
								border-bottom: 2px solid $color;
						}
				}
				.quotat_list_title {
						height: .24rem;
						line-height: .24rem;
						display: flex;
						justify-content: space-between;
						color: #999999;
						font-size: .12rem;
						> span:nth-of-type(2) {
								margin-left: .7rem;
						}
				}
		}
</style>
