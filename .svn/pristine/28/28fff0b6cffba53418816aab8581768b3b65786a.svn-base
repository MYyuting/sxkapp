<template>
    <!--发行详情页-->
		<div class="xq-con">
				<Head>
						<span class="el-icon-arrow-left" slot="head_left" @click="back"></span>
						<span class="" slot="head_center">{{investors.investorsName}}</span>
						<span class="iconfont icon-paiHangBang_Star" slot="head_right" @click="xgbClick(investors.investorsId,investors.investorsCode)"></span>
				</Head>

				<div id="mescroll" class="mescroll">
						<div class="shuju">
								<ul>
										<li :class="[baseInfo.price > baseInfo.closePrice ? 'colr' : (baseInfo.price == baseInfo.closePrice? 'colh' : 'colg' )]">
												<span>{{baseInfo.price}}</span>
												<span v-show="baseInfo.price > baseInfo.closePrice" class="iconfont iconz icon-priceUp"></span>
												<span v-show="baseInfo.price < baseInfo.closePrice" class="iconfont icond icon-priceDown"></span>
										</li>
										<li><span>最高</span> <span :class="[baseInfo.price > baseInfo.closePrice ? 'colr' : (baseInfo.price == baseInfo.closePrice? 'colh' : 'colg' )]">{{baseInfo.higestPrice}}</span></li>
										<li><span>今开</span> <span>{{baseInfo.openPrice}}</span></li>
										<li :class="[baseInfo.price > baseInfo.closePrice ? 'colr' : (baseInfo.price == baseInfo.closePrice? 'colh' : 'colg' )]">
												<span class="colr">{{baseInfo.addPrice}}</span>
												<span>{{baseInfo.uplowPrice}}</span>
										</li>
										<li><span>最低</span> <span>{{baseInfo.lowestPrice}}</span></li>
										<li><span>昨收</span> <span>{{baseInfo.closePrice}}</span></li>
										<li><span>成交量</span> <span>{{baseInfo.turnoverNum}}</span></li>
										<li><span>换手率</span> <span>{{baseInfo.changPoint}}</span></li>
										<li><span>涨停价</span> <span>{{zhang}}</span></li>
										<li><span>成交额</span> <span>{{baseInfo.changeMoney}}</span></li>
										<li><span>流通量</span> <span>{{baseInfo.circulatingTime}}</span></li>
										<li><span>跌停价</span> <span>{{tienum}}</span></li>
								</ul>
						</div>
						<!--图标-->
						<!--<xiantu v-if="true" :object="object"></xiantu>-->
						<div class='fade'>
								<div class="tabTime">
										<span v-for="(item,index) in tabList1" :class="[i == index ? 'active' : '']"
									@click="tabClick1(index)">{{item.til}}</span>
								</div>
								<div class="confirm">
										<div v-show="i==0" id="myChart1" :style="{width: '2.1rem', height: '2.45rem', border:'1px solid #ccc'}"></div>
										<div v-show="i==1" id="myChart" :style="{width: '2.1rem', height: '2.45rem', border:'1px solid #ccc'}"></div>
										<!--右买卖5-->
										<div class="temp_content_right">
												<div class="temp-tab">
														<span :class="tabShow ? '':'active'" @click="tabBtn(0)">五档</span>
														<span @click="tabBtn(1)" :class="tabShow ? 'active':''">明细</span>
												</div>
												<div v-show="!tabShow">
														<ul class="sell">
																<li v-for="(item,index) in sellList">
																		<span>卖{{5-index}}</span><span>{{item.price}}</span><span>{{item.num}}</span>
																</li>
														</ul>
														<br>
														<ul class="buy">
																<li v-for="(item,index) in buyList">
																		<span>买 {{index+1}}</span><span>{{item.price}}</span><span>{{item.num}}</span>
																</li>
														</ul>
												</div>
												<!--明细-->
												<div v-show="tabShow">
														<ul class="sellBuy" v-if="buyAndSellerList.length!=0">
																<li  v-for="item in buyAndSellerList">
																		<span>{{item.time}}</span><span>{{item.price}}</span><span>{{item.num}}</span>
																</li>
														</ul>
														<div class="wnone" v-if="buyAndSellerList.length==0">
																<p v-show="!mxShow">暂无数据</p>
																<p v-show="mxShow">先选择一个发行人</p>
														</div>
												</div>
										</div>
								</div>
						</div>
						<!--tab-->
						<div class="nav">
								<p v-for="(item,index) in tabList"
									 :class="{active:(currentIndex == index)}"
									 @click="tabClick(index)">{{item}}</p>
						</div>
						<!--简介-->
						<div v-show="currentIndex==0">
								<Introduction :investors="investors"></Introduction>
						</div>
						<!--时间商品-->
						<div v-show="currentIndex==1">
								<timeCom ref="timeCom"></timeCom>
						</div>
						<!--动态-->
						<div v-show="currentIndex==2">
								<DongTai v-show="dtShow" :datalist="datalist"></DongTai>
								<div class="zanwu" v-show="!dtShow">
										<p>暂无数据</p>
								</div>
						</div>
						<!--新闻-->
						<div class="xingX" v-show="currentIndex==3">
								<Journalism :text="newsInformationList"></Journalism>
						</div>
				</div>

				<!--底部-->
				<footer>
						<ul>
								<li @click="buybtn">
										<i class="iconfont icon-buy_normal"></i>
										<p>买入</p>
								</li>
								<li @click="sellbut" >
										<i class="iconfont icon-sell_normal"></i>
										<p>卖出</p>
								</li>
								<li @click="jiazx">
										<i v-show="StatusType == 0" class="iconfont icon-favorite_normal"></i>
										<i v-show="StatusType != 0" class="iconfont icon-favorite_remove"></i>
										<p>{{StatusType == 0? '加自选' : '删除自选'}}</p>
								</li>
								<li @click="giveXg" >
										<img src="../../assets/img/giveStar.svg" alt="">
										<p>送星光</p>
								</li>
						</ul>
				</footer>


				<!--送星光弹框-->
				<div class="el-motai" v-show="alertS" @touchmove.prevent>
						<div>
								<div>
										<p>送给  <span class="til-name">{{investors.investorsName}}</span></p>
										<input type="number" v-model="xingNum">
										<div class="img-k">
												<img src="../../assets/img/home/star@2x.png" alt="">
												<span class="shu"> {{user_num}} 可用</span>
										</div>
										<div class="btn-el">
												<button class="quxiao" @click="quxiao">取消</button>
												<button class="queren" @click="queren">确认</button>
										</div>
								</div>
						</div>
				</div>
		</div>
</template>

<script>
		import Head from '@/components/public/headNav'
		import MeScroll from "../../../static/mescroll/mescroll.min"
		import DongTai from '@/components/public/issuser'
		import timeCom from '@/components/public/timeCom'
		import Introduction from '@/components/public/introduction'
		import Journalism from  '@/components/index/Xlist'
		import { Toast} from 'mint-ui';
    export default {
        name: "faxingXQ",
				data(){
						return {
								dtShow:true,
								tabShow:false,
								tabList1:[
										{
												til:"分时"
										},
										{
												til:"日线"
										}
								],
								tabList:['简介', '时间商品', '动态', '新闻'],
								currentIndex:0,
								token:'',
								StatusType:'1',
								object:{},
								i:0,
								activeName: 'first',
								newsInformationList:'', // 星讯
								baseInfo:{},  //发行行情
								buyList:[],  //买5数据
								sellList:[],  //卖5数据
								investors:{},  // 发行人信息
								minitePriceList:[], //分时数据
								tInvestHisList:[
										{
												investorsAllMoney: "265208.42",//日成交额
												investorsAllNum: "854014.2",//日成交量
												investorsClosePrice: "0.30",//昨日收盘价
												investorsCode: 800001,//发行人代码
												investorsDate: "2016-12-13",//日期
												investorsHighestPrice: "0.70",//最高价
												investorsLowestPrice: "0.60",//最低价
												investorsOpenPrice: "0.40",//开盘价
												investorsTodayClosePrice: "0.60",//今日收盘价
												uplow: "0.30",//涨跌幅
												uplowPrice: "100.00%"//涨跌百分比
										},
								],  //日k数据
								buyAndSellerList:[], // 明细
								mxShow:true,
								tienum:0,
								zhang:0,
								data:[
										// [
										// 		"2007-05-24",
										// 		0.84,
										// 		0.65,
										// 		1.56,
										// 		5.52,
										// 		24000
										// ],
								],
								alertS:false,
								user_num:0,
								xingNum:'',
								datalist:'',
						}
				},
				mounted(){
        		this.token = localStorage.getItem('userName');
						localStorage.setItem('code',this.$route.query.code);
			      this.getJSON1();
						// var arrAll = this.tInvestHisList;
						// let arr=[];
						// let arr2=[];
						// let arr3=[];
						// arrAll.forEach(function (item,index) {
						// 		console.log(item);
						// 		for (let i in item) {
						// 				arr2.push(item[i])
						// 		}
						// 		console.log(arr2);
						// 		for (var i in arr2){
						// 				if(i==1|| i ==4 ){
						// 						arr3.push(arr2[i])
						// 				}else if(i ==5 ||i ==6 ||i ==7 ||i ==8 ){
						// 						arr3.unshift(arr2[i])
						// 				}
						// 		}
						// 		arr.push(arr3);
						// 		arr3=[];
						// 		arr2=[]
						// });
						// console.log(arr);
						// this.data = arr;

				},
				methods:{
						// 点击送星光
						giveXg(){
								this.$axios.post(url+'/api/user/getUserInfo',this.$qs.stringify({
										token:this.token
								})).then((res) => {
										console.log(res.data);
										if(res.data.status == 102){
												this.$router.push('/signin');
										}else{
												this.alertS = true;
												this.user_num = res.data.data.starlight_num; //可用星光
										}
								})
						},
						//取消投票
						quxiao(){
								this.alertS = false;
								this.xingNum = '';
						},
						//确认投票
						queren(){
								console.log(this.investors.investorsId)
								this.$axios.post(url+'/api/user/updateStarlightNum',this.$qs.stringify({
										token:this.token,
										starlightNum:this.xingNum,// 星光数
										tInvestorsId:this.investors.investorsId,//发行人id
										recordId:'0',
										voteNewId:'',  //只有0传
										operatingType:'3',//0:投票赠送、1申购赠送、2发行人动态赠送、
								})).then((res) => {
										console.log(res.data);
										switch (res.data.status)
										{
												case '0':
														Toast({
																message: '赠送成功',
																duration: 1000
														});
														break;
												default:
														Toast({
																message: res.data.message,
																duration: 1000
														});
										}
										this.alertS = false;
										this.xingNum = '';
								}).catch((err) => {
										console.log(err);
								})
						},

						//点击卖出
						sellbut(){
								this.$router.push({
											path:'/business/wmai',
											query:{
												code:this.investors.investorsCode,
												name:this.investors.investorsName,
											}
								})
						},
						//点击买出
						buybtn(){
								this.$router.push({
											path:'/business/wbuy',
											query:{
												code:this.investors.investorsCode,
												name:this.investors.investorsName,
											}
								})
						},
						//tab切换
						tabBtn(i){
								if(i>0){
									this.tabShow = true;
								}else{
									this.tabShow = false;
								}
						},
						// 是否自选
						getStatus(){
								this.$axios.post(url+'/api/userAttention/findUserAttention',this.$qs.stringify({
										token:this.token,
										userId: this.investors.investorsUserId ,  //  发行人代码
								})).then((res) => {
										console.log(res.data);
										if(res.data.status == 0){
												this.StatusType = 1
										}else{
												this.StatusType = 0
										}
								}).catch((err) => {
										console.log(err);
								})
						},
        		//加自选
						jiazx(){
								if(this.StatusType == 0){
										this.$axios.post(url+'/api/userAttention/addUserAttention',this.$qs.stringify({
												token:this.token,
												attentionUserId:this.investors.investorsUserId,    //userid
												attentionStatus:1,   //0:取消关注、1关注、
										})).then((res) => {
												console.log(res.data)
												if(res.data.status == 0){
														this.StatusType = 1;
														Toast({
																message: "成功添加自选",
																duration: 1000
														});
												}else if(res.data.status == 102){
														this.$router.push('/signin');
												}else{
														Toast({
																message: "添加自选失败",
																duration: 1000
														});
												}
										})
								}else{
										this.$axios.post(url+'/api/userAttention/addUserAttention',this.$qs.stringify({
												token:this.token,
												attentionUserId:this.investors.investorsUserId,    //userid
												attentionStatus:0,   //0:取消关注、1关注、
										})).then((res) => {
												console.log(res)
												if(res.data.status == 0){
														this.StatusType = 0;
														Toast({
																message: "已删除自选",
																duration: 1000
														});
												}else{
														Toast({
																message: "删除自选失败",
																duration: 1000
														});
												}
										})
								}
						},
						// 星光榜
						xgbClick(id,code){
								this.$router.push({
										path: '/xgph',
										query: {
												code:code,
												id:id,
										}
								})
						},
						back(){
								this.$router.go(-1);
						},
						//tab切换
						tabClick(index){
								this.currentIndex =index;
								if(index == 2){
										this.dtJson();  //动态
								}else if(index == 3){
										this.xingJson() // 星讯
								}else if(index == 1){
										// 父调子方法
										this.$refs.timeCom.yuyueJson();
								}
						},
						handleClick(tab, event) {
								// console.log(tab, event);
						},
						tabClick1(index){
								this.i =index
						},
						//星讯数据
						xingJson(){
								this.$axios.post(url+'/api/investors/findInvestorsNewsInformation',this.$qs.stringify({
										investorsCode:localStorage.getItem('code'),
								})).then((res) => {
										console.log(res.data);
										if(res.data.status == 0){
												this.newsInformationList = res.data.data;
										}
								}).catch((err) => {
										console.log(err)
								})
						},
						//获取动态数据
						dtJson(){
								this.$axios.post(url+'/sxz/api/findSxzRecordPageList',this.$qs.stringify({
										token:this.token,
										userId:this.investors.investorsUserId,
								})).then((res) => {
										console.log(res.data);
										if(res.data.status == 0){
												if(res.data.data.list.length == 0){
														this.dtShow = false
												}else{
														this.dtShow = true
														this.datalist = res.data.data.list
												}
										}else{

										}
								}).catch((err) => {
										console.log(err)
								})
						},
						//请求数据详情
						getJSON1(){
								this.$axios.post(url+'/miao/publishInformation.do',this.$qs.stringify({
										token:this.token,
										pcode:localStorage.getItem('code'),
								})).then((res) => {
										console.log(res.data);
										this.object = res.data.OBJECT;
										this.baseInfo = res.data.OBJECT.baseInformation; //行情
										var z = this.baseInfo.closePrice * 1.1   //涨停价
										var d = this.baseInfo.closePrice * 0.9  //涨停价
										this.zhang = z.toFixed(2);
										this.tienum = d.toFixed(2);
										console.log(this.baseInfo);
										// var buyList = res.data.OBJECT.buyFiverList;  //买5
										// this.sellList = res.data.OBJECT.sellFilverList;  //卖5
										var buyFiverList = res.data.OBJECT.buyFiverList; //买五集合
										var buyFiverListNew = [];
										for (var i = 0; i < 5; i++) {
												if (i < buyFiverList.length) {
														buyFiverListNew[i] = buyFiverList[i];
												} else {
														buyFiverListNew[i] = { price: '-', num: '-' };
												}
										}
										this.buyList = buyFiverListNew;
										//卖5
										var sellFiverList = res.data.OBJECT.sellFilverList//卖五集合
										var sellFilverListNew = [];
										for (var j = 0; j < 5; j++) {
												if ((4-j) < sellFiverList.length) {
														sellFilverListNew[j] = sellFiverList[4-j];
														// sellFilverListNew[i].color1 = getColor(sellFilverListNew[i].price, closePrice);
														// sellFilverListNew[i].color2 = green;
												} else {
														sellFilverListNew[j] = { price: '-', num: '-'};
												}
										}
										console.log(sellFilverListNew);
										this.sellList = sellFilverListNew;
										this.investors = res.data.OBJECT.investors;   //发行人信息
										if(res.data.OBJECT.buyAndSellerList.length == 0){
												this.mxShow = false
										}else{
												this.mxShow = true
										}
										this.buyAndSellerList = res.data.OBJECT.buyAndSellerList; //买卖明细
										this.tInvestHisList = res.data.OBJECT.tInvestHisList   // 日k先
										if(res.data.OBJECT.tInvestHisList.length > 0){
												var arrAll = this.tInvestHisList;
												var arr=[];
												let arr2=[];
												let arr3=[];
												arrAll.forEach(function (item,index) {
															// console.log(item);
														for (let i in item) {
																arr2.push(item[i])
														}
															console.log(arr2);
														for (var i in arr2){
																if( i ==1 ){
																		arr3.push(parseFloat(arr2[i]))
																}else if(i==4){
																		arr3.push(arr2[i])
																}else if(i ==5 ||i ==6 ||i ==7 ||i ==8 ){
																		arr3.unshift(parseFloat(arr2[i]))
																}
														}
														arr.push(arr3);
														arr3=[];
														arr2=[]
												});
										}
										this.data = arr;  // 日k数据
										console.log(this.data)

										this.minitePriceList = res.data.OBJECT.minitePriceList;  //分时数据
										this.getStatus();
										this.drawLine();
										this.minDate();
								}).catch((err) => {
										console.log(err)
								})
						},
						splitData(rawData) {
								console.log(rawData);
								var categoryData = [];
								var values = [];
								var volumes = [];
								for (var i = 0; i < rawData.length; i++) {
										categoryData.push(rawData[i].splice(5, 1)[0]);
										values.push(rawData[i]);
										console.log(rawData[i]);
										volumes.push([i, rawData[i][4], rawData[i][0] > rawData[i][1] ? 1 : -1]);
								}
								console.log(volumes);
								return {
										categoryData: categoryData,
										values: values,
										volumes: volumes
								};
						},

						calculateMA(dayCount, data) {
								var result = [];
								for (var i = 0, len = data.values.length; i < len; i++) {
										if (i < dayCount) {
												result.push('-');
												continue;
										}
										var sum = 0;
										for (var j = 0; j < dayCount; j++) {
												sum += data.values[i - j][1];
										}
										result.push(+(sum / dayCount).toFixed(3));
								}
								console.log(result);
								return result;
						},
						//k线绘制
						drawLine(){
								let upColor = '#00da3c';
								let downColor = '#ec0000';
								let data = this.splitData(this.data);
								// 基于准备好的dom，初始化echarts实例
								let myChart = this.$echarts.init(document.getElementById('myChart'))
								// 绘制图表
								myChart.setOption({
										backgroundColor: '#fff',
										animation: false,
										tooltip: {
												trigger: 'axis',
												axisPointer: {
														type: 'cross'
												},
												backgroundColor: '#fff',
												borderWidth: 1,
												borderColor: '#eee',
												// triggerOn:'mousemove|click',
												textStyle: {    //提示框文字
														color: '#333',
														fontSize:12,
												},
												position: [-3,-49],
												extraCssText: 'height:.3rem;line-height:.3rem;width: 150%;overflow: hidden;',
												formatter: function (params) {
														// console.log(params);
														return [
																'<span>'+'最高:<i>' + params[0].data[1]+'</i></span>',
																'<span>'+'最低:<i>' + params[0].data[2]+'</i></span>',
																'<span>'+'今开:<i>' + params[0].data[3]+'</i></span>',
																'<span>'+'今收: <i>' + params[0].data[4]+'</i></span>',
														].join('');
												},
										},
										axisPointer: {
												link: {xAxisIndex: 'all'},
												type:'line',
												label: {
														backgroundColor: '#777'
												}
										},
										//工具栏
										toolbox: {
												show:false,
										},
										visualMap: {
												// 两个手柄对应的数值是 4 和 15
												// range: [4, 12],
												show: false,
												seriesIndex: 5,
												dimension: 2,
												pieces: [{
														value: 1,
														color: downColor
												}, {
														value: -1,
														color: upColor
												}]
										},
										grid: [
												// 上方k线图表
												{
														top: 0,
														left: 0,
														right: 0,
														height: 180,
														borderColor:'#ccc',
														// borderWidth:1
												},
												// 下方柱状图表
												{
														left: 0,
														right: 0,
														height: 40,
														bottom:0,
														borderColor:'#ccc',
														// borderWidth:1
												}
										],
										xAxis: [
												//上方图表x轴设置
												{
														// name: '时间轴',
														type: 'category',
														position: 'bottom',
														griIndex: 0,
														scale: true,
														boundaryGap: true,
														splitLine: {
																show: true,
																interval: 3,
																lineStyle: {
																		color: ['#ccc']
																}
														},
														axisLine: {
																show: false,
																lineStyle: {
																		color: "#b5b7c2",
																		width: 1
																}
														},
														axisLabel: {
																show: false
														},
														axisTick: {
																show: false,
														},
														axisPointer: {
																label: {
																		show: false
																}
														}
												},//xia方图表x轴设置
												{
														type: 'category',
														gridIndex: 1,
														// position: 'bottom',
														data: data.categoryData,
														scale: true,
														boundaryGap : false,
														axisLine: {show: false},
														axisTick: {show: false},
														axisLabel: {show: false},
														splitLine: {
																show: false,
																interval: 3,
																lineStyle: {
																		color: ['#ccc']
																}
														},
														min: 'dataMin',
														max: 'dataMax',
														splitNumber: 100,
												}
										],
										yAxis: [
												// 上方图表y轴设置
												{
														// name: '报价',
														scale: true,
														position: "right",
														type: 'value',
														gridIndex: 0,
														splitNumber: 5,
														boundaryGap: true,
														splitLine: {
																show: true,
																interval: 3,
																lineStyle: {
																		color: ['#ccc']
																}
														},
														axisTick: {
																show: false,
																alignWithLabel: true
														},
														axisLine: {
																show: false,
																lineStyle: {
																		color: '#ccc'
																}
														}
												},
												{
														scale: true,
														gridIndex: 1,
														splitNumber: 2,
														axisLabel: {show: false},
														axisLine: {show: false},
														axisTick: {show: false},
														splitLine: {show: false}
												}
										],
										// 缩放组件，用的inside模式，即动作在表本身发生会导致缩放触发，不会有额外的缩放条
										dataZoom: [
												{
														type: 'inside',
														xAxisIndex: [0, 1],
														start: 100,
														end: 70,
														minSpan:80,
														maxSpan:60,
												}
										],
										// 走势图数据
										series: [
												// 上方图表数据（k线）
												{
														name: 'Dow-Jones index',
														type: 'candlestick',
														data: data.values,
														itemStyle: {
																normal: {
																		color: upColor,
																		color0: downColor,
																		borderColor: null,
																		borderColor0: null
																}
														}
												},
												{
														name: 'MA5',
														type: 'line',
														data: this.calculateMA(1, data),
														smooth: true,
														showSymbol: false,
														lineStyle: {
																normal: {
																		width: 1
																}
														}
												},
												{
														name: 'MA10',
														type: 'line',
														data: this.calculateMA(10, data),
														smooth: true,
														showSymbol: false,
														lineStyle: {
																normal: {
																		width: 1
																}
														}
												},
												{
														name: 'MA20',
														type: 'line',
														data: this.calculateMA(20, data),
														smooth: true,
														showSymbol: false,
														lineStyle: {
																normal: {
																		width: 1
																}
														}
												},
												{
														name: 'MA30',
														type: 'line',
														data: this.calculateMA(30, data),
														smooth: true,
														showSymbol: false,
														lineStyle: {
																normal: {
																		width: 1
																}
														}
												},
												{
														name: 'Volume',
														type: 'bar',
														xAxisIndex: 1,
														yAxisIndex: 1,
														data: data.volumes
												}
										]
								}, true);

								window.onresize = myChart.resize;
								myChart.dispatchAction({
										type: 'brush',
										areas: [
												{
														brushType: 'lineX',
														coordRange: ['2018-06-02', '2018-06-20'],
														xAxisIndex: 0
												}
										]
								});
						},

						// 分时数据
						minDate(){
								let upColor = '#00da3c';
								let downColor = '#ec0000';
								let heColor = '#ccc';
								console.log(this.minitePriceList);
								var arrData =[];
								var dateArr =[];
								var values = [];
								var i = 0 ;
								for (var item of this.minitePriceList){
										arrData.push(parseFloat(item.price));
										dateArr.push(item.time);
										var valArr = item.buyAndSell.split('.');
										values.push([i++, parseFloat(valArr[0]), parseFloat(valArr[1])==2 ? 1 : (parseFloat(valArr[1])==3 ? -1 : 0)]);
								}
								console.log(values);

								let myChart = this.$echarts.init(document.getElementById('myChart1'));
								var option = {
										tooltip: {
												trigger: 'axis',
												axisPointer: {
														type: 'cross'
												},
												backgroundColor: '#fff',
												borderWidth: 1,
												borderColor: '#eee',
												// triggerOn:'mousemove|click',
												textStyle: {    //提示框文字
														color: '#333',
														fontSize:12,
												},
												// position: [3,49],
										},
										visualMap: {
												// 两个手柄对应的数值是 4 和 15
												// range: [4, 15],
												show: false,
												seriesIndex: 5,
												dimension: 2,
												pieces: [{
														value: 1,
														color: upColor
												}, {
														value: -1,
														color: downColor
												}, {
														value: 2,
														color: heColor
												}]
										},
										grid: [
												// 上图表
												{
														top: 15,
														left: 0,
														right: 0,
														width:'auto',
														height: 180,
														borderColor:'#ccc',
														containLabel:true,
														// borderWidth:1
												},
												{
														left: 0,
														right: 0,
														height: 40,
														bottom:0,
														borderColor:'#ccc',
														// borderWidth:1
												}
										],
										xAxis: [
												{
														type: 'category',
														data: dateArr,
														axisTick:{show:false},
														axisLine:{show:false}
												},
												{
														type: 'category',
														gridIndex: 1,
														// position: 'bottom',
														data: arrData,
														scale: true,
														boundaryGap : false,
														axisLine: {show: false},
														axisTick: {show: false},
														axisLabel: {show: false},
														splitLine: {
																show: false,
																interval: 3,
																lineStyle: {
																		color: ['#ccc']
																}
														},
														min: 'dataMin',
														max: 'dataMax',
														splitNumber: 100,
												}
										],
										yAxis: [
												{
												type: 'value',
												boundaryGap: [0, '100%'],
												axisTick:{show:false},
												axisLine:{show:false}
												},
												{
														scale: true,
														gridIndex: 1,
														splitNumber: 2,
														axisLabel: {show: false},
														axisLine: {show: false},
														axisTick: {show: false},
														splitLine: {show: false}
												}
										],
										dataZoom: [
												{
												type: 'inside',
												xAxisIndex: [0, 1],
												start: 100,
												end: 50
												}
										],
										series: [
												{
														type:'line',
														smooth:true,
														symbol: 'none',
														sampling: 'average',
														areaStyle: {},
														itemStyle: {
																color: {
																		type: 'linear',
																		x: 0,
																		y: 0,
																		x2: 0,
																		y2: 1,
																		colorStops: [{
																				offset: 0, color: 'red' // 0% 处的颜色
																		}, {
																				offset: 1, color: 'blue' // 100% 处的颜色
																		}],
																		globalCoord: false // 缺省为 false
																}
														},
														data: arrData
												},
												{
														name: 'Volume',
														type: 'bar',
														xAxisIndex: 1,
														yAxisIndex: 1,
														data: values,
												}
										]
								};
								myChart.setOption(option)
						}
				},
				components:{
        		Head,
						DongTai,
						Introduction,
						timeCom,
						Journalism,
				}
    }
</script>
<style>
		#myChart > div:nth-child(2) span{
				margin-right: 10%;
		}
		#myChart > div:nth-child(2) span i{color: #ff5558;}
</style>

<style scoped lang="scss">
		.zanwu{
				p{
						line-height: .5rem;
						color: #aaa;
						text-align: center;
				}
		}
		.xingX{
				padding-top: .1rem;
		}
		.fade{
				padding: 0 .15rem;
				border-bottom: 1px solid #ddd;
				.tabTime{
						border-bottom: 1px solid #ddd;
						border-top: 1px solid #ddd;
						height: .36rem;
						line-height: .36rem;
						span{
								margin-right: .2rem;
						}
						.active{
								padding-bottom: 2px;
								border-bottom: 1px solid #FF5558;
								color: #FF5558;
						}
				}
				.confirm{
						height: 2.5rem;
						margin-top: .1rem;
						display: flex;
						justify-content: space-between;
				}
				.wnone{
						display: flex;
						justify-content: center;
						align-content: center;
						flex-wrap: wrap;
						height: 100%;
						line-height: .28rem;
						margin-top: .54rem;
				}
				.temp_content_right {
						width: 1.4rem;
						box-sizing:border-box;
						padding:0 0 0 .1rem ;
						flex-grow: 1;
						overflow:auto;
						.temp-tab{
								display: flex;
								justify-content: center;
								padding-bottom: .07rem;
								span{
										padding: .05rem 0;
										margin: 0 .15rem;
								}
								.active{
										border-bottom: 3px solid #ff5558;
										color: #ff5558;
								}
						}
						/*.sell{margin-bottom: 6px;}*/
						.buy,.sell,.sellBuy{
								li{
										display: flex;
										justify-content: space-between;
										align-items: center;
										line-height: .2rem;
										span{
												font-size:.12rem;
												text-align: right;
										}
										span:nth-child(2){
												display: inline-block;
												width: 33%;
										}
										span:nth-child(3){
												display: inline-block;
												width: 34%;
										}
								}
						}
						.sellBuy{
								/*height: 1.9rem;*/
								overflow: auto;
						}
				}
		}
		/*mescroll滚动的区域*/
		.mescroll {
				position: fixed;
				top: .5rem;
				bottom: .5rem;
				height: auto;
				z-index: 222;
		}
		$color:#ff5558;
		.shuju{
				ul{
						padding: .1rem .15rem;
						display: flex;
						flex-wrap: wrap;
						justify-content: space-between;
						li{
								min-width: 30%;
								line-height: .21rem;
								font-size: .12rem;

						}
						li:not(:first-child){
								span:nth-child(1){
										color: #666;
								}
						}
						li:first-child{
								span{
										font-size: .2rem;
								}
						}
						.colr{
								color: #FF5558!important;
						}
						.colg{
								color: #00BB37!important;
						}
						.colh{
								color: #333!important;
						}
				}
		}

		.nav{
				text-align: center;
				border-bottom: 1px solid #ddd;
				display: flex;
				align-items: center;
				justify-content: space-around;
				height: .36rem;
				p{
						display: block;
						padding: 8px 0;
						&.active{
								border-bottom: 2px solid $color;
								color: $color;
						}
				}
		}
		footer{
				position: fixed;
				z-index: 22;
				bottom: 0;
				height: .5rem;
				width: 100%;
				ul{
						display: flex;
						align-items: center;
						text-align: center;
				}
				li{
						width: 25%;
						color: $color;
						.iconfont{
								font-size: .28rem;
						}
						img{
								width: .29rem;
						}
				}
		}
		.el-motai{
				position: fixed;
				z-index: 9999;
				width: 100%;
				height: 100%;
				top: 0;
				left: 0;
				background: rgba(0,0,0,.4);
				>div{
						width: 100%;
						height: 100%;
						display: flex;
						justify-content: center;
						align-items: center;
						>div{
								border-radius: 5px;
								width: 60%;
								overflow: hidden;
								background: #fff;
								text-align: center;
						}
						p{
								line-height: 3;
						}
						.til-name{
								color: #FF5558;
						}
				}
				.img-k{
						height: .35rem;
						display: flex;
						justify-content: center;
						align-items: center;
						img{
								width: .15rem;
								margin-right: 5px;
						}
						color: #9013FE;
				}
				input{
						height: .25rem;
						border-radius: 4px;
						border: 1px solid #aaa;
				}
				input::placeholder{
						text-align: center;
				}
				.btn-el{
						display: flex;
						button{
								width: 50%;
								height: .35rem;
								background: #fff;
								border: 1px solid #ccc;
						}
				}
		}
</style>