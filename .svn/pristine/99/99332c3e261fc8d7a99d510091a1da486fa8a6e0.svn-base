<template>
    <div class="shengou">
        <div v-for="item in buyList">
						<div class="tilt">
								<span>正在申购</span>
								<div class="tilt_time">
										<i class="iconfont icon-timeRunning"></i>
										<p>距申购结束剩{{day}}天{{hour}}时{{min}}分{{sec}}秒</p>
								</div>
						</div>
						<div class="home_s" v-for="item1 in item.tInvestorsList">
								<div @click="shen(item1.investorsUserId,item1.investorsCode,item1.investorsId)">
										<div class="tImg">
												<img :src="item1.investorsAvatar" :onerror="defaultImg" alt="">
										</div>
										<div class="home_text">
												<p>{{item1.investorsName}} <i class="iconfont icon-fans"></i></p>
												<p>{{item1.investorsCode}}</p>
										</div>
								</div>
								<div class="price">
										<span>{{item1.price}}</span>元/秒
								</div>
								<div>
										<button @click="shenGouBtn(item1.investorsName,item1.investorsCode)">申购</button>
								</div>
						</div>
				</div>
    </div>
</template>

<script>
    export default {
        name: "homeS",
				props:['buyList'],
				data(){
        		return {
								defaultImg: 'this.src="' + require('../../assets/img/home/touxiang.png') + '"',
        				arrlist:[],
        				day:'00',
								hour:'00',
								min:'00',
								sec:'00',
								timer:null,
						}
				},
				mounted(){
        		// console.log(this.buyList);
        		this.arrlist = this.buyList;
        		console.log(this.arrlist);
						let StartTime = new Date(this.arrlist[0].buyStartTime.replace(/-/g,"/")).getTime();
						let EndTime = new Date(this.arrlist[0].buyEndTime.replace(/-/g,"/")).getTime();
						// console.log(StartTime);
        		this.setTimer(StartTime,EndTime);
				},
				beforeDestroy() {
						if(this.timer) { //如果定时器还在运行 或者直接关闭，不用判断
								clearInterval(this.timer); //关闭
						}
				},
				methods:{
						shenGouBtn(name,code){
								this.$router.push({path:'/business/wbuy',query:{code:code,name:name,disb:true}});
						},

						shen(userid,code,investorsId){
								//申购详情
								this.$router.push({path: '/shengou', query: {id: userid,code:code,investorsId:investorsId}})
						},
						//时间倒计时
						setTimer(stateTime,endTime){
								// console.log(stateTime,endTime)
								let self = this;
								this.timer = setInterval(function(){
										//现在的时间
										let time = new Date().getTime();
										// console.log(time);
										// console.log(endTime);
										//开始时间小于现在时间  结束时间大于现在时间
										if(stateTime < time && endTime > time){
												// self.txt = '距投票结束剩余时间';
												let t = endTime-time;
												if(t > 0){
														self.tiemPblic(t);
												}else{
														clearInterval(self.timer);
												}
										}else if(stateTime > time){
												//开始时间大于现在时间
												// self.txt = '距投票开始剩余时间';
												let t = stateTime-time;
												if(t > 0){
														self.tiemPblic(t)
												}else{
														clearInterval(self.timer);
												}
										}else if(endTime< time){
												// 结束时间小于现在时间
												// console.log(3);
												clearInterval(self.timer);
												// self.txt = '投票时间已结束';
										}
								},1000);
						},
						tiemPblic(t){
								let day = Math.floor(t/86400000);
								let hour=Math.floor((t/3600000)%24);
								let min=Math.floor((t/60000)%60);
								let sec=Math.floor((t/1000)%60);
								this.day = day < 10 ? "0" + day : day;
								this.hour = hour < 10 ? "0" + hour : hour;
								this.min = min < 10 ? "0" + min : min;
								this.sec = sec < 10 ? "0" + sec : sec;
						},
				}
    }
</script>

<style scoped lang="scss">
  .shengou{
    padding:6px .12rem .1rem;
    border-bottom:4px solid #eee;
    /*height:.9rem;*/
  }
	.price{
					width: 30%;
					overflow: hidden;
	}
  .home_s{
    display: flex;
    justify-content: space-between;
    align-items: center;
    height:.6rem;
    >div:nth-child(1){
      display: flex;
				width: 50%;
				overflow: hidden;
      /*justify-content: space-between;*/
      align-items: center;
				.tImg{
						display: inline-block;
						height: .45rem;
						width: .45rem;
						margin-right: .1rem;
						border-radius: 50%;
						overflow: hidden;
						vertical-align: middle;
						text-align: center;
						img{
								max-width: 100%;
								max-height: 100%;
						}
				}
    }
    .home_text{
				p:nth-child(2){
						font-size: .12rem;
				}
				p:nth-child(1){
						margin-bottom: .07rem;
						i{
								color: #ff5558;
						}
				}
		}
    >div:nth-child(2){
      font-size: .16rem;
    }
    button{
      padding: .07rem 0;
			width: .7rem;
      background: #ff5558;
      border: none;
			font-size: .14rem;
      color: #fff;
    }
  }
  .tilt{
    display: flex;
    justify-content: space-between;
    align-items: center;
    height:.35rem;
    >span{
      border-left: 2px solid #FF5558;
      padding-left: .1rem;
    }
  }
  .tilt1{
    padding: .1rem 0;
    a{
      color: #999;
      text-decoration: none;
    }
  }
  .tilt_time {
    display: flex;
    justify-content: space-between;
    align-items: center;
    p {
      color: #FF5558;
      font-size:.12rem;
    }
    i{
				font-size: .3rem;
				margin-right: -3px;
				color:#FF5558 ;
		}
  }

</style>
