// The Vue build version to load with the `import` command
// (runtime-only or standalone) has been set in webpack.base.conf with an alias.
import Vue from 'vue'
import 'babel-polyfill'
import App from './App'
import VueRouter from 'vue-router'
import Vuex from 'vuex';
import router from './router'
import qs from 'qs'
import store from './store/store.js'
import axios from 'axios'
import swiperJs from '../static/mescroll/swiper.min'
import ElementUI from 'element-ui'
import 'element-ui/lib/theme-chalk/index.css'
require('swiper/dist/css/swiper.css');
import VueAwesomeSwiper from 'vue-awesome-swiper'
import VueClipboard from 'vue-clipboard2'
// 引入echarts
import echarts from 'echarts'
//mint-ui
import MintUI from 'mint-ui'
import 'mint-ui/lib/style.css'
Vue.use(MintUI);
Vue.use(Vuex);


Vue.use(VueClipboard);
Vue.use(VueAwesomeSwiper);
Vue.prototype.$echarts = echarts;
Vue.prototype.$axios = axios;
Vue.prototype.$qs = qs;
Vue.use(VueRouter);
Vue.use(ElementUI);
Vue.config.productionTip = false;

/* eslint-disable no-new */
new Vue({
	el: '#app',
	store,
	axios,
	router,
	components: { App },
	template: '<App/>'
});

let scrollTop = 0;

router.beforeEach((route, redirect, next) => {
  //检测登录信息是否过期
  //if( ! app.$store.state.userInfo) return app.$router.push({path: '/login'})
  if (redirect.path === '/') {
    scrollTop = document.getElementById('app').scrollTop;
  }
  document.title = route.name;

  next();
});


// 全局路由守卫
router.beforeEach((to, from, next) => {
	console.log('navigation-guards');
	// to: Route: 即将要进入的目标 路由对象
	// from: Route: 当前导航正要离开的路由
	// next: Function: 一定要调用该方法来 resolve 这个钩子。执行效果依赖 next 方法的调用参数。

	const nextRoute = ['mine', 'business', 'quotation','quotat'];
	const auth = store.state.token;
	console.log(auth)
	let isLogin = store.state.token;  // 是否登录
	// 未登录状态；当路由到nextRoute指定页时，跳转至login
	if (nextRoute.indexOf(to.name) >= 0) {
		if (!isLogin) {
			console.log('what fuck');
			router.push({ name: 'signin' })
		}
	}
	// 已登录状态；当路由到login时，跳转至home
	if (to.name === 'signin') {
		if (isLogin) {
			router.push({ name: 'mine' });
		}
	}
	next();
});
export default router;