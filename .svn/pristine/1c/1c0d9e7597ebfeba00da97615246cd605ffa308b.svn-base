<template>
    <!--个人动态-->
		<div class="geren">
				<Head>
						<p slot="head_left" @click="back"><i class="el-icon-arrow-left"></i></p>
						<p slot="head_center">{{userName}}</p>
				</Head>
				<div class="hei"></div>
				<div class="top-con">
						<div class="img">
								<img :src="'http://xsk.quanxiankaibo.com'+imgUrl" alt="">
						</div>
						<div class="conter-txt">
								<p><span>动态</span> <span>{{length1}}</span></p>
								<p><span>获赞</span> <span>{{length}}</span></p>
						</div>
						<button @click="gzClick" :class="thide==0 ? 'bock' : ''" :disabled="thide==0">发布动态</button>
				</div>
				<!--tab切换-->
				<div class="tabtil"  v-model="debtLibraryTabIndex">
						<span v-for="(item,index) in tab" @click="tabClick(index)" :class="num == index ? 'active' : ''">{{item}}</span>
				</div>
				<!--动态-->
				<div id="mescroll0" class="mescroll" v-show="num == 0">
						<div  id="dataList0">
								<Issuser :datalist="newsList0" ></Issuser>
						</div>
				</div>
				<!--自选-->
				<div id="mescroll1" class="mescroll" v-show="num == 1">
						<div  id="dataList1">
								<Homes :datalist1="newsList1" :whide="thide1"></Homes>
						</div>
				</div>
				<!--关注-->
				<div id="mescroll2" class="mescroll" v-show="num == 2">
						<div   id="dataList2">
								<div class="guanzhu" v-for="(item,index) in newsList2">
										<div>
												<div><img :src="'http://xsk.quanxiankaibo.com/'+item.userAvatar" alt=""></div>
												<span>{{item.userName}}</span>
										</div>
										<button @click="btnClick(index)"
														:class="item.attentionStatus? '' : 'quxiao'">{{item.flag ? '关注' : '取消'}}
										</button>
								</div>
						</div>
				</div>
				<!--ta的粉丝-->
				<div id="mescroll3" class="mescroll" v-show="num == 3">
						<div   id="dataList3">
								<Homes :datalist1="newsList3" :whide="thide"></Homes>
						</div>
				</div>
				<!--<router-link  v-show="thide==1"  tag="div" class="add_dynamic beijing" to="/addynamic"><img src="../../assets/img/FaXingRen/addNewsOrService@2x.png" alt="" /></router-link>-->
		</div>
</template>

<script>
		import MeScroll from 'mescroll.js'
		import Head from  '@/components/public/headNav'
		import Issuser from  '@/components/public/issuser'
		import Homes from  '@/components/public/listCon'
		import { Toast } from 'mint-ui';
		export default {
				name: "gerendt",
				data(){
						return {
								num:0,
								newsList0: [],
								newsList1: [],
								newsList2: [],
								newsList3: [],
								mescroll: '',
								length:0,
								length1:0,
								debtLibraryTabIndex:0,
								mescrollArr: new Array(4),
								flag:true,
								thide:0,//判断ismay
								thide1:0,
								token:sessionStorage.getItem("userName"),
								tab:["动态",'自选','关注','Ta的偶像'],
								guanList:[
										{
												flag:true,
												imgUrl:require('../../assets/img/home/home1.png'),
												til:'油腻大叔',
										},
								],
								imgUrl:this.$route.query.userImg,
								userName:this.$route.query.name
						}
				},
				mounted(){
						this.getDt()
						console.log(this.$route.query.id)
						//初始化首页
						this.mescrollArr[0] = this.initMescroll("mescroll0", "dataList0");
				},
				methods:{
						back(){
								this.$router.back(-1)
						},
						tabClick(index){
								if (this.num != index) {
										this.num= index;
										if (this.mescrollArr[index] == null) {
												this.mescrollArr[index] = this.initMescroll("mescroll" + index, "tab" + index);
										}
								}
						},
						//关注
						btnClick(index){
//						this.guanList[index].flag = !this.guanList[index].flag
								let userid = this.newsList2[index].userId;
								if(this.newsList2[index].attentionStatus ==0){
										this.$axios.post(url+'/api/userAttention/addUserAttention',this.$qs.stringify({
												token:this.token,
												attentionUserId:userid,  //被关注人的userId
												attentionStatus:1,       //发1关注
										})).then((res) => {
												console.log(res.data);
												if(res.data.status == 0){
														this.newsList2[index].attentionStatus = 1;
														Toast({
																message: '取消关注',
																position: 'bottom',
																duration: 1000
														});
												}else{
														Toast({
																message: res.data.message,
																position: 'bottom',
																duration: 1000
														});
												}

										}).catch((err) => {
												console.log(err);
										})
								}else{
										this.$axios.post(url+'/api/userAttention/addUserAttention',this.$qs.stringify({
												token:this.token,
												attentionUserId:userid,  //被关注人的userId
												attentionStatus:0,       //发0取消
										})).then((res) => {
												console.log(res.data);
												if(res.data.status == 0){
														this.newsList2[index].attentionStatus = 0;
														Toast({
																message: '关注成功',
																position: 'bottom',
																duration: 2000
														});
												}else {
														Toast({
																message: res.data.message,
																position: 'bottom',
																duration: 2000
														});
												}
										}).catch((err) => {
												console.log(err);
										})
								}
						},
						// 点击发布动态
						gzClick(){
								this.$router.push('/addynamic')
						},
						getDt(){
				
						},
						
						initMescroll(mescrollId, clearEmptyId) {
								//创建MeScroll对象,内部已默认开启下拉刷新,自动执行up.callback,刷新列表数据;
								var isIOS = !!navigator.userAgent.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/); //ios终端
								let mescroll = new MeScroll(mescrollId, {
										//上拉加载的配置项
										up: {
												use:true,
												callback: this.getListData, //上拉回调,此处可简写; 相当于 callback: function (page) { getListData(page); }
												isBounce: true, //是否允许ios的bounce回弹;默认true,允许回弹; 此处配置为false,可解决微信,QQ,Safari等等iOS浏览器列表顶部下拉和底部上拉露出浏览器灰色背景和卡顿2秒的问题
												offset:100,
												page: {
														num: 1, //当前页 默认0,回调之前会加1; 即callback(page)会从1开始
														size:2, //每页数据条数
														time: null //加载第一页数据服务器返回的时间; 防止用户翻页时,后台新增了数据从而导致下一页数据重复;
												},
												noMoreSize: 4, //如果列表已无数据,可设置列表的总数量要大于半页才显示无更多数据;避免列表数据过少(比如只有一条数据),显示无更多数据会不好看; 默认5
												empty: {
//            warpId: clearEmptyId,
														icon: "", //图标,默认null
														tip: "暂无数据...", //提示
														// btntext: "去逛逛 >", //按钮,默认""
														// btnClick: function () {//点击按钮的回调,默认null
														// 	alert("点击了按钮,具体逻辑自行实现");
														// }
												},
												// clearEmptyId: clearEmptyId, //相当于同时设置了clearId和empty.warpId; 简化写法;默认null
												// toTop: { //配置回到顶部按钮
												// 	src: ToTopImg, //默认滚动到1000px显示,可配置offset修改
												// },
												htmlNodata: '<p class="upwarp-nodata">-- 没有更多数据 --</p>', //无数据的布局
										},
										down: {
												// callback:this.getListData,
										},
								});
								return mescroll;
						},
						getListData(page) {
								//联网加载数据
								var self = this;
								var dataIndex = this.num; //记录当前联网的nav下标,防止快速切换时,联网回来curNavIndex已经改变的情况;
								console.log(dataIndex)
								this.getListDataFromNet(dataIndex, page.num, page.size, function (pageData) {
										// console.log("dataIndex=" + dataIndex + ", curNavIndex=" + self.currentIndex + ", page.num=" + page.num + ", page.size=" + page.size + ", pageData.length=" + pageData.length);
										self.mescrollArr[dataIndex].endSuccess(pageData.length);
										self.setListData(pageData, dataIndex, page);
								}, function () {
										//联网失败的回调,隐藏下拉刷新和上拉加载的状态;
										self.mescrollArr[dataIndex].endErr();
								});
						},
						/*设置列表数据
             * pageData 当前页的数据
             * dataIndex 数据属于哪个nav */
						setListData(pageData, dataIndex, page) {
								console.log(dataIndex);
								//更新列表数据
								switch (dataIndex) {
										case 0:
												if (page.num == 1) this.newsList0 = [];
												this.newsList0 = this.newsList0.concat(pageData);
												break;
										case 1:
												if (page.num == 1) this.newsList1 = [];
												this.newsList1 = this.newsList1.concat(pageData);
												break;
										case 2:
												if (page.num == 1) this.newsList2 = [];
												this.newsList2 = this.newsList2.concat(pageData);
												break;
										case 3:
												if (page.num == 1) this.newsList3 = [];
												this.newsList3 = this.newsList3.concat(pageData);
												break;
								}
						},
						/*联网加载列表数据*/
						getListDataFromNet(curNavIndex, pageNum, pageSize, successCallback, errorCallback) {
								// debugger;
								//延时一秒,模拟联网
								let that = this;
								let token=sessionStorage.getItem("userName");
								setTimeout(() => {
										var listData = []
										var url1=''
										var url2=''
										var url3=''
										var url4=''
										switch (curNavIndex) {
												case 0:
														url1=url+'/sxz/api/findSxzRecordPageList'//动态
														aon()
														break;
												case 1:
														url4=url+'/api/userAttention/findUserAttentionInvestors'//自选
														aon3()
														break;
												case 2:
														url3=url+'/api/userAttention/findUserAttentionUser'//关注
														aon2()
														break;
												case 3:
														url2=url+'/api/userStarlightDetails/findUserStar'//偶像
//          /api/userStarlightDetails/findUserStar 查询ta的偶像
//		  参数 token、userId、
//		  如果查询自己的ta的偶像、
//		  只传个token就可以、不用传userId、
//		  如果查别人的ta的偶像把这个人的userId 传到userId上
														aon1()
														break;
										}
										//封装  ---》动态、
										function aon(){
												that.$axios({
														headers:{'Content-Type':'application/x-www-form-urlencoded'},
														method: "POST",
														url: url1,
														data:that.$qs.stringify({
																token:token,
																pageNumber:pageNum,//5
																pageSize:pageSize,//2
																userid:that.$route.query.id
														})
												})
														.then(res=> {
																console.log(res)
																if(res.data.status==0){
																		var ic=res.data.data.list;
																		console.log(ic)
																		that.length1 = ic.length;
																		var length = 0;
																		for(var item of ic){
																				length+=item.pList.length;
																				var a=item.grTime.substring(0,10)
																				//截取到8
																				var b=item.userName.substring(0,8)
																				item.grTime=a;
																				item.userName=b
																		}
																		console.log(length);
																		that.length = length
																		successCallback && successCallback(ic);
																}else if(res.data.status==212){
																		var msga=res.data.message
																		Toast({
																				message:'没有更多数据了...',
																		});
																		successCallback && successCallback('');
																}else if(res.data.status==211){
																		var msga=res.data.message
																		Toast({
																				message:'还没有人发表动态，快来发布吧！',
																		});
																		errorCallback&&errorCallback()//失败回调
																}
														})
														.catch(err=>{
																console.log(err);
																errorCallback&&errorCallback()//失败回调
														});
										}
         
										//偶像
										function aon1(){
												that.$axios({
														headers:{'Content-Type':'application/x-www-form-urlencoded'},
														method: "POST",
														url:url2,
														data:that.$qs.stringify({
																token:token,
																userId:that.$route.query.id
														})
												}).then(res=> {
														if(res.data.status==0){
																var one=res.data.investorsList
																that.thide=res.data.isMy
																successCallback && successCallback(one);
														}else{
																var msga=res.data.message
																Toast({
																		message:"您还不是明星的粉丝",
																});
																errorCallback&&errorCallback()//失败回调
														}
												}).catch(err=>{
														console.log(err);
														errorCallback&&errorCallback()//失败回调
												});
										}
										//偶像、关注
										function aon2(){
												that.$axios({
														headers:{'Content-Type':'application/x-www-form-urlencoded'},
														method: "POST",
														url:url3,
														data:that.$qs.stringify({
																token:token,
																userId:that.$route.query.id
														})
												}).then(res=> {
														console.log("不同数据")
														console.log(res)
														if(res.data.status==0){
																var two=res.data.userTeamList
																successCallback && successCallback(two);
														}else{
																var msga=res.data.message
																Toast({
																		message:msga,
																});
																errorCallback&&errorCallback()//失败回调
														}
												}).catch(err=>{
														console.log(err);
														errorCallback&&errorCallback()//失败回调
												});
										}
										//自选
										function aon3(){
												that.$axios({
														headers:{'Content-Type':'application/x-www-form-urlencoded'},
														method: "POST",
														url:url4,
														data:that.$qs.stringify({
																token:token,
																userId:that.$route.query.id
														})
												}).then(res=> {
														if(res.data.status==0){
																var one=res.data.investorsList
																that.thide=res.data.isMy
																successCallback && successCallback(one);
														}else{
																var msga=res.data.message
																Toast({
																		message:"您还没有选择,暂无数据",
																});
																errorCallback&&errorCallback()//失败回调
														}
												}).catch(err=>{
														console.log(err);
														errorCallback&&errorCallback()//失败回调
												});
										}
         
								}, 1500)
						}
				},
				components:{
						Head,
						Issuser,
						Homes
				}
		}
</script>

<style scoped lang="scss">
		$color:#FF5558;
		.hei{
				height:.5rem
		}
		.beijing{
				display: flex;
				img{
						width: .5rem;
						height: .5rem;
						display: block;
				}
		}
		.add_dynamic{
				position:fixed;
				bottom:1rem;
				right:.2rem;
				width:.5rem;
				height:.5rem;
				text-align: center;
				line-height:.5rem;
				background:#fff;
				font-size:.56rem;
				font-weight:bolder;
				border-radius:50%;

				&:before{
						color:$color;
				}
		}
		.tabtil{
				border-bottom: 1px solid #ddd;
				height: .36rem;
				padding: 0 .2rem;
				span{
						line-height: .36rem;
						display: inline-block;
						margin-right: .3rem;
						&.active{
								border-bottom: 2px solid $color;
								color: $color;
						}
				}
		}
		.top-con{
				padding-top: .15rem;
				padding-bottom: .1rem;
				display: flex;
				justify-content: space-around;
				align-items: center;
				.img{
						width: .65rem;
						height: .65rem;
						border-radius: 50%;
						overflow: hidden;
						img{
								max-width: 100%;
								min-height: 100%;
						}
				}
				span{
						position: relative;
						font-size: .12rem;
						color: #999;
						margin-right: .3rem;
				}
				.conter-txt{
						width: 40%;
				}
				p span:nth-of-type(1):after{
						content: '';
						position: absolute;
						right: -.2rem;
						top: 5px;
						width: 1px;
						height: .1rem;
						border-left: 1px solid #ccc;
				}
				p{
						line-height: .25rem;
				}
				button{
						width: .75rem;
						height: .3rem;
						font-size: .12rem;
						color: $color;
						border-radius: 4px;
						background: #fff;
						border: 1px solid $color;
						&.bock{
								border: 1px solid #bcbcbc;
								color: #bcbcbc;
						}
				}
		}

		.guanzhu{
				display: flex;
				padding: 0 .15rem;
				justify-content: space-between;
				align-items: center;
				border-bottom: 1px solid #ddd;
				height: .6rem;
				div{
						display: flex;
						align-items: center;
						div{
								width: .4rem;
								height: .4rem;
								border-radius: 50%;
								margin-right: .1rem;
								border: 1px solid #eee;
								overflow: hidden;
								position: relative;
						}
						img{
								max-width: 100%;
						}
				}
				button{
						width: .58rem;
						height: .24rem;
						color: #fff;
						background: #F5A623;
						border: none;
						border-radius: 3px;
						&.quxiao{
								background: #bcbcbc;
						}
				}
		}



</style>